name: Generate Documentation Style Guide

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      force:
        description: 'Force regeneration of style guide'
        required: false
        default: 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-style-guide:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Check if style guide generation needed
        id: check-trigger
        run: |
          # For workflow_dispatch with force=true, always run
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.force }}" == "true" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "reason=forced" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For PRs, always run
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "reason=pull_request" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if .doc.holiday directory exists
          if [ ! -d ".doc.holiday" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "reason=first_run" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if style guide exists
          if [ ! -f ".doc.holiday/styleguide.md" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "reason=no_styleguide" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For push events, check if relevant files changed
          if [ -f ".doc.holiday/trigger-paths.txt" ]; then
            TRIGGER_PATHS=$(cat .doc.holiday/trigger-paths.txt | grep -v '^#' | grep -v '^$' | tr '\n' ' ')
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} 2>/dev/null || echo "")
            
            MATCHES=false
            for path in $TRIGGER_PATHS; do
              if echo "$CHANGED_FILES" | grep -q "$path"; then
                MATCHES=true
                break
              fi
            done
            
            echo "should_run=$MATCHES" >> $GITHUB_OUTPUT
            echo "reason=file_changes" >> $GITHUB_OUTPUT
          else
            # No trigger paths file, run anyway
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "reason=no_trigger_file" >> $GITHUB_OUTPUT
          fi
        
      - name: Initialize doc.holiday Configuration
        if: steps.check-trigger.outputs.should_run == 'true'
        uses: ./.github/actions/styleguide-action/initialize-doc-holiday-config
        
      - name: Detect Documentation Root
        if: steps.check-trigger.outputs.should_run == 'true'
        id: detect-docs-root
        uses: ./.github/actions/styleguide-action/detect-documentation-root
          
      - name: Identify Publishing Framework
        if: steps.check-trigger.outputs.should_run == 'true'
        id: identify-framework
        uses: ./.github/actions/styleguide-action/identify-publishing-framework
        
      - name: Generate Style Guide
        if: steps.check-trigger.outputs.should_run == 'true'
        id: generate-styleguide
        uses: ./.github/actions/styleguide-action/generate-styleguide
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Commit changes
        if: steps.check-trigger.outputs.should_run == 'true' && github.event_name != 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes to commit
          if [ -n "$(git status --porcelain .doc.holiday/)" ]; then
            git add .doc.holiday/
            git commit -m "docs: update documentation style guide

          Generated by Documentation Style Guide Action
          Trigger: ${{ steps.check-trigger.outputs.reason }}"
            
            git push
            echo "✅ Style guide updates committed and pushed"
          else
            echo "ℹ️ No changes to commit"
          fi
          
      - name: Comment on PR
        if: steps.check-trigger.outputs.should_run == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const styleguide = fs.existsSync('.doc.holiday/styleguide.md') 
              ? fs.readFileSync('.doc.holiday/styleguide.md', 'utf8')
              : 'Style guide generation failed';
            
            const truncated = styleguide.length > 3000 
              ? styleguide.substring(0, 3000) + '\n\n... (truncated)'
              : styleguide;
            
            const body = `## 📚 Documentation Style Guide\n\n${truncated}\n\n[View full style guide](.doc.holiday/styleguide.md)`;
            
            // Find and update or create comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Documentation Style Guide')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }