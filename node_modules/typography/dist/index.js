'use strict';

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _compassVerticalRhythm = require('compass-vertical-rhythm');

var _compassVerticalRhythm2 = _interopRequireDefault(_compassVerticalRhythm);

var _modularscale = require('modularscale');

var _modularscale2 = _interopRequireDefault(_modularscale);

var _isObject = require('lodash/isObject');

var _isObject2 = _interopRequireDefault(_isObject);

var _createStyles = require('./utils/createStyles');

var _createStyles2 = _interopRequireDefault(_createStyles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createStylesString = function createStylesString(options) {
  // Create styles for base theme + each subtheme.
  var vr = (0, _compassVerticalRhythm2.default)(options);
  var styles = (0, _createStyles2.default)(vr, options);

  if (options.subThemes != null && (0, _isObject2.default)(options.subThemes)) {
    options.subThemes.forEach(function (name) {
      var theme = options.subThemes[name];
      vr = (0, _compassVerticalRhythm2.default)(theme);
      styles += (0, _createStyles2.default)(vr, theme, name, options);
    });
  }

  return styles;
};

var Typography = function Typography(opts) {
  var defaults = {
    baseFontSize: '18px',
    baseLineHeight: '28.5px',
    modularScales: [{
      scale: 'octave'
    }, {
      scale: 'golden',
      maxWidth: '768px'
    }],
    googleFonts: [],
    headerFontFamily: '\n      -apple-system, BlinkMacSystemFont,\n      "Segoe UI", "Roboto", "Oxygen",\n      "Ubuntu", "Cantarell", "Fira Sans",\n      "Droid Sans", "Helvetica Neue", sans-serif;',
    bodyFontFamily: 'georgia, serif',
    headerGray: 20,
    headerGrayHue: 0,
    bodyGray: 20,
    bodyGrayHue: 0,
    headerWeight: 700,
    bodyWeight: 400,
    boldWeight: 700,
    fontFaces: []
  };

  var options = (0, _objectAssign2.default)(defaults, opts);

  if (options.subThemes != null && (0, _isObject2.default)(options.subThemes)) {
    options.subThemes.forEach(function (name) {
      var theme = options.subThemes[name];
      options.subThemes[name] = (0, _objectAssign2.default)({}, options, theme, { rhythmUnit: 'px' });
    });
  }

  var vr = (0, _compassVerticalRhythm2.default)(options);

  return {
    options: options,
    GoogleFont: require('./components/GoogleFont')(options),
    TypographyStyle: require('./components/TypographyStyle')(function () {
      return createStylesString(options);
    }),
    rhythm: vr.rhythm,
    createStyles: function createStyles() {
      return createStylesString(options);
    },

    fontSizeToPx: vr.adjustFontSizeTo,
    fontSizeToMS: function fontSizeToMS(scaler) {
      // TODO detect which modular scale to use based on current screen width.
      // or better, this should just generate styles and insert them in head
      // with media queries? Perhaps do something similar to CSS Modules
      // where this just returns a custom class name that you add to your
      // component.
      var baseFont = options.baseFontSize.slice(0, -2);
      var newFontSize = (0, _modularscale2.default)(scaler, options.modularScales[0].scale) * baseFont + 'px';
      return vr.adjustFontSizeTo(newFontSize);
    },
    injectStyles: function injectStyles() {
      if (typeof document !== 'undefined') {
        // Replace existing
        if (document.getElementById('typography.js')) {
          var styleNode = document.getElementById('typography.js');
          styleNode.innerHTML = createStylesString(options);
        } else {
          var node = document.createElement('style');
          node.id = 'typography.js';
          node.innerHTML = createStylesString(options);
          document.head.appendChild(node);
        }
      }
    }
  };
};

module.exports = Typography;

/*
console.log(Typography({
  baseFontSize: '16px',
  subThemes: {
    blog: {
      baseFontSize: '18px',
      bodyFontFamily: 'Open Sans',
    },
  },
}).createStyles())
*/