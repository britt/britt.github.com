'use strict';

var _staticGeneration = require('./static-generation');

var _staticGeneration2 = _interopRequireDefault(_staticGeneration);

var _buildProduction = require('./build-production');

var _buildProduction2 = _interopRequireDefault(_buildProduction);

var _postBuild = require('./post-build');

var _postBuild2 = _interopRequireDefault(_postBuild);

var _globPages = require('./glob-pages');

var _globPages2 = _interopRequireDefault(_globPages);

var _toml = require('toml');

var _toml2 = _interopRequireDefault(_toml);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function customPost(program, callback) {
  var directory = program.directory;
  var customPostBuild = void 0;
  try {
    customPostBuild = require(directory + '/post-build');
  } catch (e) {
    // Do nothiing.
  }

  if (customPostBuild) {
    console.log('Performing custom post-build steps');

    (0, _globPages2.default)(directory, function (globError, pages) {
      return customPostBuild(pages, function (error) {
        if (error) {
          console.log('customPostBuild function failed');
          callback(error);
        }
        return callback();
      });
    });
  } else {
    callback();
  }
}

function post(program, callback) {
  console.log('Copying assets');

  (0, _postBuild2.default)(program, function (error) {
    if (error) {
      console.log('failed to copy assets');
      return callback(error);
    }

    return customPost(program, callback);
  });
}

function bundle(program, callback) {
  console.log('Compiling production bundle.js');

  (0, _buildProduction2.default)(program, function (error) {
    if (error) {
      console.log('failed to compile bundle.js');
      return callback(error);
    }

    return post(program, callback);
  });
}

function html(program, callback) {
  console.log('Generating static html pages');

  var directory = program.directory;
  var config = void 0;
  try {
    config = _toml2.default.parse(_fs2.default.readFileSync(directory + '/config.toml'));
  } catch (error) {
    console.log("Couldn't load your site config");
    callback(error);
  }

  (0, _staticGeneration2.default)(program, function (error) {
    if (error) {
      console.log('failed at generating static html pages');
      return callback(error);
    }

    // If we're not generating a SPA, go directly to post build steps
    if (config.noProductionJavascript) {
      post(program, callback);
    } else {
      bundle(program, callback);
    }
    return true;
  });
}

module.exports = html;