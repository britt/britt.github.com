'use strict';

var program = require('commander');
var packageJson = require('../../package.json');
var _ = require('lodash');
var fs = require('fs-extra');
var path = require('path');

// Commands
var develop = require('../utils/develop');
var build = require('../utils/build');
var newCommand = require('../utils/new');

// Copy our load-context function to root of site in a dot file.
var gatsbyFile = __dirname + '/../dist/utils/load-context.js';
var siteDirectory = path.resolve('.');
var fileName = siteDirectory + '/.gatsby-context.js';
fs.copy(gatsbyFile, fileName);

var defaultHost = process.platform === 'win32' ? 'localhost' : '0.0.0.0';

var directory = path.resolve('.');
program.directory = directory;

program.version(packageJson.version).usage('[command] [options]');

program.command('develop').description('Start development server. Watches files and rebuilds and hot reloads if something changes') // eslint-disable-line max-len
.option('-h, --host <url>', 'Set host. Defaults to ' + defaultHost, defaultHost).option('-p, --port <port>', 'Set port. Defaults to 8000', '8000').action(function (command) {
  if (command === 'develop') {
    develop(program);
  }
});

program.command('build', 'Build a Gatsby project.').option('--prefix-links', 'Build site with links prefixed (set prefix in your config).').action(function (command) {
  if (command === 'build') {
    build(program, function (err) {
      if (err) {
        throw err;
      } else {
        console.log('Done');
      }
    });
  }
});

program.command('new [rootPath] [starter]', 'Create new Gatsby project in path [.].').action(function (command) {
  if (command === 'new') {
    newCommand(program);
  }
});

program.parse(process.argv);

// If the user types an unknown sub-command, just display the help.
var subCmd = process.argv.slice(2, 3)[0];
var cmds = _.map(program.commands, '_name');
console.log(subCmd, cmds);

if (!_.includes(cmds, subCmd)) {
  console.log('help me');
  program.help();
}