{"version":3,"sources":["../../src/utils/webpack-modify-validate.js"],"names":["validationWhitelist","object","stylus","any","sassLoader","sassResources","string","array","items","responsiveLoader","program","config","babelConfig","stage","isObject","isFunction","resolve","validationState","returnValidation","schemaExtension","error","console","log","details","forEach","err","index","path","type","message","process","exit","ValidateWebpackConfig"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,sBAAsB,sBAAIC,MAAJ,CAAW;AACrCC,UAAQ,sBAAIC,GAAJ,EAD6B;AAErCC,cAAY,sBAAID,GAAJ,EAFyB;AAGrCE,iBAAe,CAAC,sBAAIC,MAAJ,EAAD,EAAe,sBAAIC,KAAJ,GAAYC,KAAZ,CAAkB,sBAAIF,MAAJ,EAAlB,CAAf,CAHsB;AAIrCG,oBAAkB,sBAAIN,GAAJ;AAJmB,CAAX,CAA5B;;;sFAOgB,iBACdO,OADc,EAEdC,MAFc,EAGdC,WAHc,EAIdC,KAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOR,6BAAe,qBAAf,EAAqC;AACzCH,qBADyC;AAEzCC,oBAFyC;AAGzCC,yBAHyC;AAIzCC;AAJyC,aAArC,CAPQ;;AAAA;;AAcd;;AAEA,qCACE,iBAAEC,QAAF,CAAWH,MAAX,KAAsB,iBAAEI,UAAF,CAAaJ,OAAOK,OAApB,CADxB,EAEG;;gBAEWL,MAAO;aACVE,KAAM;KALjB;;AASMI,2BAzBQ,GAyBU,gCAASN,OAAOK,OAAP,EAAT,EAA2B;AACjDE,gCAAkB,IAD+B;AAEjDC,+BAAiBnB;AAFgC,aAA3B,CAzBV;;AAAA,gBA8BTiB,gBAAgBG,KA9BP;AAAA;AAAA;AAAA;;AAAA,6CA+BLT,MA/BK;;AAAA;;AAkCdU,oBAAQC,GAAR,CAAa,6CAAb;AACAL,4BAAgBG,KAAhB,CAAsBG,OAAtB,CAA8BC,OAA9B,CAAsC,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACpDL,sBAAQC,GAAR,CAAa,IAAGI,QAAQ,CAAE,GAA1B;AACAL,sBAAQC,GAAR,CAAYG,IAAIE,IAAhB;AACAN,sBAAQC,GAAR,CAAYG,IAAIG,IAAhB,EAAuB,GAAvB,EAA2BH,IAAII,OAA/B;AACAR,sBAAQC,GAAR,CAAa,IAAb;AACD,aALD;;AAOAD,oBAAQC,GAAR,CAAY,qBAAY;;;;GAAxB;;AA1Cc,6CAgDPQ,QAAQC,IAAR,CAAa,CAAb,CAhDO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,qB;;;;SAAAA,qB","file":"webpack-modify-validate.js","sourcesContent":["import _ from \"lodash\"\nimport invariant from \"invariant\"\nimport validate, { Joi } from \"webpack-validator\"\nimport stripIndent from \"common-tags/lib/stripIndent\"\nimport apiRunnerNode from \"./api-runner-node\"\n\n// We whitelist special config keys that are not part of a standard Webpack v1\n// config but are in common usage. We should be able to completely remove this\n// once we're on Webpack v3.\n//\n// For info on whitelisting with webpack-validator see:\n// https://github.com/js-dxtools/webpack-validator#customizing\nconst validationWhitelist = Joi.object({\n  stylus: Joi.any(),\n  sassLoader: Joi.any(),\n  sassResources: [Joi.string(), Joi.array().items(Joi.string())],\n  responsiveLoader: Joi.any(),\n})\n\nexport default (async function ValidateWebpackConfig(\n  program,\n  config,\n  babelConfig,\n  stage\n) {\n  // We don't care about the return as plugins just mutate the config directly.\n  await apiRunnerNode(`modifyWebpackConfig`, {\n    program,\n    config,\n    babelConfig,\n    stage,\n  })\n\n  // console.log(JSON.stringify(config, null, 4))\n\n  invariant(\n    _.isObject(config) && _.isFunction(config.resolve),\n    `\n    You must return an webpack-configurator instance when modifying the Webpack config.\n    Returned: ${config}\n    stage: ${stage}\n    `\n  )\n\n  const validationState = validate(config.resolve(), {\n    returnValidation: true,\n    schemaExtension: validationWhitelist,\n  })\n\n  if (!validationState.error) {\n    return config\n  }\n\n  console.log(`There were errors with your webpack config:`)\n  validationState.error.details.forEach((err, index) => {\n    console.log(`[${index + 1}]`)\n    console.log(err.path)\n    console.log(err.type, `,`, err.message)\n    console.log(`\\n`)\n  })\n\n  console.log(stripIndent`\n    Your Webpack config does not appear to be valid. This could be because of\n    something you added or a plugin. If you don't recognize the invalid keys listed\n    above try removing plugins and rebuilding to identify the culprit.\n  `)\n\n  return process.exit(1)\n})\n"]}